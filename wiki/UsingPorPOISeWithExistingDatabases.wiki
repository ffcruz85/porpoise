#summary Explains how to use PorPOISe with an existing database

= Introduction =

Often, you will already have a database with POIs you want to expose as a layer. In that case, it would be nice of PorPOISe could connect to your existing database, wouldn't it? Thanks to PorPOISe's  modular structure, this isn't very difficult. This page will explain how to go about this.

= Details =

As with [Filters], it is easiest to alter the data collection behaviour of PorPOISe by extending an existing `POIConnector`. This example will explaing how to extend the `SQLPOIConnector` class to use a different database schema than the default one.

If you already have a database with coordinates and descriptive information, all you basically have to do is write an SQL query that selects the data you want but returns it in a format that PorPOISe understands. Let's assume you have a database with properties for sale. Your database probably has a table `House` with columns like `house_id`, `price`, `street`, `number` and `city`. However, PorPOISe expects a table `POI` and columns like `title`, `line2`, `line3` and `line4`. So, your table (with content) would look like this:

|| *house_id* || *latitude* || *longitude* || *street* || *number* || *city* || *price ||
|| 1 || 52.1 || 4.5 || Zuidbuurtseweg || 2 || Zoeterwoude || some euros ||
|| 2 || 52.11 || 4.3 || Brugsestraat || 39 || Den Haag || many euros ||

But, for PorPOISe to deliver it to a Layar client, it _should_ look like this:

|| *id* || *lat* || *lon* || *line 2* || *line3* || title ||
|| 1 || 52.1 || 4.5 || Zuidbuurtseweg 2 || Zoeterwoude || some euros ||
|| 2 || 52.11 || 4.3 || Brugsestraat 39 || Den Haag || many euros ||

You can achieve this transformation fairly easily by _aliasing_ the column names in your SQL query:

`SELECT house_id AS id, latitude AS lat, longitude AS lon, CONCAT(street, ' ', number) as line2, city as line3, price as title FROM House`

When you exexcute this query on the first table the output will look like it came from the second table, so (almost) ready for PorPOISe to send back to the client. However, how do you instruct PorPOISe to use this query?

The most straightforward approach is to adapt the file `sqlpoiconnector.class.php` and substitute the query there for the one that works on _your_ database. However, this will get you in trouble when the next update of PorPOISe comes out: if you want to roll out the new version, you will overwrite the changes you made which you will then have to re-do in your own deployment. This is a tedious and error-prone task.

However, PorPOISe is designed to create your own `POIConnector`s that suit your specific needs. To start creating a `POIConnector` for your property database, create a file in the PorPOISe directory with a descriptive name; for this example we will go with `propertypoiconnector.class.php`. Open the file in an editor and enter this:

{{{
<?php

require_once("sqlpoiconnector.class.php");

class PropertyPOIConnector extends SQLPOIConnector {
}
}}}

Now you have created a new `POIConnector` which is based on the `SQLPOIConnector`. Because the class body is empty, it does not do anything special (other than what the default `SQLPOIConnector` does). Before we start programming that, we will first tell PorPOISe we created this `POIConnector`. Open `config.xml` and look for a line that looks like this:

{{{
<connector><name>SQLPOIConnector</name><file>sqlpoiconnector.class.php</file></connector>
}}}

What this line does is tel PorPOISe that the connector `SQLPOIConnector` can be found in file `sqlpoiconnector.class.php`. We just made a connector `PropertyPOIConnector` in file `propertypoiconnector.class.php`, so _below_ this line we will _add_ the following:

{{{
<connector><name>PropertyPOIConnector</name><file>propertypoiconnector.class.php</file></connector>
}}}

Now PorPOISe can find our `PropertyPOIConnector`. Next, we will create a layer definition that describes the property layer. Lower in the config file, find the element `<layers>` which marks the beginning of the layer definition section and, right below that line, enter the following:

{{{
<layer>
 <name>propertiesforsale</name>
 <source>
  <dsn>mysql:host=localhost;dbname=propertiesforsale</dsn>
  <username></username>
  <password></password>
 </source>
 <connector>PropertyPOIConnector</connector>
</layer>
}}}

Make sure to enter the right DSN, username and password for your server.

To be continued....